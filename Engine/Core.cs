using HyperLinkUI.Engine.GUI; using HyperLinkUI.Scenes; using Microsoft.Xna.Framework; using Microsoft.Xna.Framework.Content; using Microsoft.Xna.Framework.Input; using System.IO;   namespace HyperLinkUI.Engine {     public static class Core     {         public static double FPS = 0.0;          static object syncRoot = new object();         static GraphicsDeviceManager _graphicsManager;         public static GraphicsDeviceManager GraphicsManager         {             get {                               return _graphicsManager;             }             set             {                 _graphicsManager = value;             }         }         public static GameWindow Window;          static ContentManager content;         static SceneManager sm;         static FileSystemWatcher _scenesWatcher = new FileSystemWatcher("Content/GUI/Scenes/");                  static string _settingsPath;         public static SceneManager Init(ContentManager c, GraphicsDeviceManager g, GameWindow w, string settingsPath = "Content/Saves/settings.xml")         {             GraphicsManager = g;             Window = w;             content = c;             Window.AllowUserResizing = true;             Window.KeyDown += OnKeyDown;             _settingsPath = settingsPath;             _scenesWatcher.Changed += UpdateWatch;             _scenesWatcher.EnableRaisingEvents = true;             sm = new SceneManager(c, g);             return sm;         }         public static void LoadAll(SceneManager s, string sceneFolder, string sceneEntryPoint, string settingsPath)         {             Theme.LoadIniFile(settingsPath, content);             s.CreateScenesFromFolder(sceneFolder);             s.LoadScene(sceneEntryPoint);         }                  public static double GetFPS(GameTime gt)
        {
            return (1 / gt.ElapsedGameTime.TotalSeconds);
        }         public static void UpdateFPS (GameTime gt)
        {
            FPS = GetFPS(gt);
        }         public static void ReloadAt(SceneManager manager, string scene)         {             // global event called so application can hot-reload itself             UIEventHandler.onHotReload(manager, new HotReloadEventArgs() { graphicsDeviceReference = GraphicsManager });                          GraphicsManager.PreferredBackBufferWidth = Theme.DisplayWidth;             GraphicsManager.PreferredBackBufferHeight = Theme.DisplayHeight;             GraphicsManager.ApplyChanges();                          manager.LoadScene(scene);         }         public static void UpdateWatch(object sender, FileSystemEventArgs e)         {             //ReloadAt(sm, SceneManager.ActiveScene.Name);             UIEventHandler.sendDebugMessage(sender, "File changes detected - press F5 to hot reload.");         }         public static void OnKeyDown(object sender, InputKeyEventArgs e)         {             if (e.Key == Keys.F5)                 ReloadAt(sm, SceneManager.ActiveScene.Name);         }     } } 